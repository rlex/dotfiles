# tag a directory in a command to come to it later
tag() {
    alias $1="cd $PWD";
}

zomb_ps() {
    ps hr -Nos | awk '$1=="Z" {print $1}'
}

fixtty() {
    stty sane
    reset
}

ff() {
    if [[ -z $1 ]]; then
        echo "Find files recursively starting at \`pwd\` - usage: findfiles pattern"
        return
    fi
        find . -type f \( -name "*$1*" -o -name ".$1*" -o -name ".*.*$1*" -o -name "*$1*.*" \) -print

}
fd() {
    if [[ -z $1 ]]; then
        echo "Find directories recursively starting at \`pwd\` - usage: finddirs pattern"
        return
    fi
        find . -type d \( -name "*$1*" -o -name ".$1*" -o -name ".*.*$1*" -o -name "*$1*.*" \) -print
}

bu() {
    for f in "$@"
        do cp -a $f ~/.backup/${f}-`date +%Y%m%d%H%M`.backup ;
    done
}

pk() {
    if [ $1 ] ; then
        case $1 in
            tbz)    tar cjvf $2.tar.bz2 $2      ;;
            tgz)    tar czvf $2.tar.gz  $2     ;;
            tar)    tar cpvf $2.tar  $2       ;;
            bz2)    bzip $2 ;;
            gz)     gzip -c -9 -n $2 > $2.gz ;;
            zip)    zip -r $2.zip $2   ;;
            7z)     7z a $2.7z $2    ;;
            *)      echo "'$1' cannot be packed via pk()" ;;
        esac
    else
        echo "'$1' is not a valid file";
    fi
}

digg() {
    case $1 in
        bind) dig +nocmd $2 any +multiline +noall +answer ;;
        *) dig -t $1 $2 +noall +answer +nocmd ;;
    esac
}

grab() {
    sudo chown -R ${USER} ${1:-.};
}

calc() {
    gawk -v CONVFMT="%12.2f" -v OFMT="%.9g"  "BEGIN { print $* ; }";
}

ssh-send-id() {
    if [ -z "$1" -o -z "$2" ]
    then
        echo "Usage: ssh-send-id pubkey_name machine"
        return 1
    fi

    cat ~/.ssh/${1}.pub | ssh $2 'mkdir .ssh; cat >> .ssh/authorized_keys'
    return $?
}

nss-manage() {
    case "$1" in
        list)    certutil -d sql:$HOME/.pki/nssdb -L ;;
        details) certutil -d sql:$HOME/.pki/nssdb -L -n "$2" ;;
        add-ca)  certutil -d sql:$HOME/.pki/nssdb -A -t "$2" -n "$3" -i "$4" ;;
        add)     pk12util -d sql:$HOME/.pki/nssdb -i "$2" ;;
        del)     certutil -d sql:$HOME/.pki/nssdb -D -n "$2" ;;
        *)
        echo "Usage list|details|add-ca|add|del"
        echo " \"details\" requires <nickname>"
        echo " \"add-ca\" requires <trustargs> <nickname> <certificate filename>"
        echo " \"add\" requires <filename>"
        echo " \"del\" requires <nickname>"
        ;;
    esac
}

flac2mp3() {
    OUTF=$1.mp3
    ARTIST=$(metaflac "$1" --show-tag=ARTIST | sed s/.\*=//g)
    TITLE=$(metaflac "$1" --show-tag=TITLE | sed s/.\*=//g)
    ALBUM=$(metaflac "$1" --show-tag=ALBUM | sed s/.\*=//g)
    GENRE=$(metaflac "$1" --show-tag=GENRE | sed s/.\*=//g)
    TRACKNUMBER=$(metaflac "$1" --show-tag=TRACKNUMBER | sed s/.\*=//g)
    DATE=$(metaflac "$1" --show-tag=DATE | sed s/.\*=//g)
    flac -c -d "$1" | lame -m j -q 0 --vbr-new -V 0 -s 44.1 - "$OUTF"
    id3 -t "$TITLE" -T "${TRACKNUMBER:-0}" -a "$ARTIST" -A "$ALBUM" -y "$DATE" -g "${GENRE:-12}" "$OUTF"
}
