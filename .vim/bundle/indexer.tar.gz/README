This is a mirror of http://www.vim.org/scripts/script.php?script_id=3221

If you are russian, you might want to read article in russian about this plugin: http://habrahabr.ru/blogs/vim/102954/
-----------------------------------

This plugin can work in two ways:
1) independently
2) as add-on for project.tar.gz (vimscript #69)

In both ways, it provides painless automatic tags generation for whole project(s) and keeps tags up-to-date.

IMPORTANT: you need patched version of ctags (5.8.1) to make this plugin work correctly with C/C++ files, because of bug in ctags 5.8. You can read detailed info about this bug and download pat—Åhed version here: http://dfrank.ru/ctags581/en.html

This plugin can be very useful when it's used together with plugins omnicppcomplete (for c, c++ development), code_complete.vim and other plugins that use tags.  You also will be able to jump from function call to its definition just by pressing Ctrl-] or g]

As i said, Indexer can work as add-on for project.tar.gz plugin ( vimscript #69 ). Indexer reads project file, parses it and builds tags for all files in project. But it also works fine without project.tar.gz.

Actually, if you use project.tar.gz plugin and your projects file is default (~/.vimprojects), then setting Indexer up is very easily: you can just copy indexer.vim to your plugins directory, start Vim and open any file from your project.  The indexer plugin will detect that opened file is a file from project and automatically start ctags for each file in this project.  It also set &path and &tags options for Vim.

If you use project.tar.gz, but you have another projects file, you should set option g:indexer_projectsSettingsFilename in your vimrc.

If you don't use project.tar.gz then you can use ".indexer_files" to define projects and files to index.  Default location of this file is "~/.indexer_files". You can change it by modifying variable g:indexer_indexerListFilename

Syntax of this file is simple, probably the best way to explain it is to show an example:
--------------------- example ~/.indexer_files -----------------------
[CoolProject] 
 
/home/user/myproject/src/*.c 
/home/user/myproject/src/*.h 
/home/user/myproject/inc/*.h 
 
[AnotherProject] 
 
/home/user/myproject2**/*.c 
/home/user/myproject2**/*.h 
-------------------------------------------------------------------------------

If you have many projects and you are lazy to put every project in
this file, you can put in your ~/.indexer_files something like this:

--------------------- example ~/.indexer_files -----------------------
[PROJECTS_PARENT filter="*.c *.h *.cpp"]
~/workspace
-------------------------------------------------------------------------------

The keyword is PROJECTS_PARENT.
In this way, every directory in ~/workspace will be interpreted as separate
project, and you can open any file from any project in ~/workspace, and the 
whole proper project will be indexed.


And, finally, it can autodetect project root. So, you can move your project to another place in filesystem, and all files will be indexed anyway.  More detailed help see in options, variable "g:indexer_lookForProjectDir".

Indexer 3.0 and later supports open several files from several projects. For example, a little story.

You have two projects: "project1" and "project2", and you use "~/.indexer_files".

1) you open file1 from project1. 
   Indexer generates tags for all files from project1 and set &tags:
   ~/.indexer_files_tags/project1
2) you open file2 from the same project1.
   Indexer just notes that file2 is file from project1. 
   &tags does not change.
3) you open file3 from project2.
   Indexer generates tags for all files from project2 and set &tags:
   ~/.indexer_files_tags/project2.
4) you switch to buffer with file1.
   Indexer does not generate any tags, it just changes &tags to
   ~/.indexer_files_tags/project1
5) you switch to buffer with file3.
   Indexer changes &tags back to ~/.indexer_files_tags/project2 .

So, you should not care about your projects. It just works. If you have some projects with subprojects, i recommend you use .vimprj directory with specific settings for your project, in which you can set any options such as &tags, &tabstop, etc. More detailed: read about option g:indexer_lookForProjectDir .

Actually, Indexer sets &path for needed project when you swith to new buffer, not only &tags.

----

You need PATCHED ctags to be installed to make this plugin work correctly with C/C++ files. http://dfrank.ru/ctags581/en.html

I have tested it both on Linux and Windows, in Vim 7.3
If you have any troubles using this plugin, feel free to email me.

-------------------------

Mercurial repos:
Stable branch: http://tinyurl.com/vim-indexer-stable
Development branch: http://tinyurl.com/vim-indexer-development


