#!/bin/bash
### Simple shell script for symlinking all files from .rc dir to home directory (c) Lex Rivera

### Array of all config files and directories
# dotfiles, for example .bashrc. Put it in array without leading dot. Also dirs.
dotfiles=( screenrc vimrc zshrc bashrc bash_profile gemrc htoprc gitconfig biewrc dircolors ackrc muttrc my.cnf toprc Xdefaults gvimrc nanorc mc vim mutt config/awesome config/mc config/htop tmux.conf mailcap gitignore_global )

# Function to symlink dotfiles
# We checking if OS is Linux (GNU coreutils), if no, we assume OS use BSD utils
# Yeah this is fuckin' dirty, but works in most of cases
symlink() {
  if [[ `uname` == "Linux" ]];
    then
      ln -sfvn $1 $2
    else
      ln -svfh $1 $2
  fi
}

case "$1" in

  env) echo "Deploying environment"
       cd ~/.rc
       echo "Deploying dotfiles from `pwd` to ${HOME}"
       if [ -d ~/.config ];
        then
           echo "skipping config folder creation"
        else
          mkdir ~/.config
       fi

       for file in ${dotfiles[@]}
         do
           symlink ~/.rc/.${file} ~/.${file}
         done
       echo "Finished!"

       cd - >&/dev/null
  ;;

  devenv) echo "Deploying pyenv+rbenv"

         if [ -d ~/.rbenv ];
          then
             echo "rbenv seems to be already installed - updating instead"
             cd ~/.rbenv && git pull
          else
              echo "installing rbenv"
              git clone https://github.com/sstephenson/rbenv.git ~/.rbenv
         fi

         if [ -d ~/.rbenv/plugins/ruby-build ];
          then
             echo "ruby-build seems to be already installed - updating instead"
             cd ~/.rbenv/plugins/ruby-build && git pull
          else
              echo "installing ruby-build"
              git clone https://github.com/sstephenson/ruby-build.git ~/.rbenv/plugins/ruby-build
         fi

         if [ -d ~/.pyenv ];
          then
             echo "pyenv seems to be already installed - updating instead"
             cd ~/.pyenv && git pull
          else
              echo "installing pyenv"
              git clone https://github.com/yyuu/pyenv.git ~/.pyenv
         fi

           if [ -d ~/.nodenv ];
            then
               echo "nodenv seems to be already installed - updating instead"
               cd ~/.nodenv && git pull
            else
                echo "installing nodenv"
                git clone https://github.com/OiNutter/nodenv ~/.nodenv
           fi

           if [ -d ~/.nodenv/plugins/node-build ];
            then
               echo "node-build seems to be already installed - updating instead"
               cd ~/.nodenv/plugins/node-build && git pull
            else
                echo "installing node-build"
                git clone https://github.com/OiNutter/node-build ~/.nodenv/plugins/node-build
           fi


  ;;

  nuke) echo "Cleaning up env"
        echo "Removing dotfiles"
        for file in ${dotfiles[@]}
          do
            rm -vf ~/.${file}
        done
        echo "Cleaning up devenv"
        rm -rvf ~/.pyenv
        rm -rvf ~/.rbenv
        echo "Removing history"
        rm -vf ~/.zsh-history
        rm -vf ~/.bash_history
        echo "Removing directory"
        rm -rf ~/.rc
  ;;

  *) echo "Possible args: env, devenv, nuke"
esac
